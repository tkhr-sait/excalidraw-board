# Multi-stage build for optimized production image
FROM node:18-alpine AS builder

# pnpmのインストール
RUN corepack enable
RUN corepack prepare pnpm@latest --activate

WORKDIR /app

# 依存関係のインストール
COPY package.json pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile --prod=false

# アプリケーションコードのコピー
COPY . .

# ビルド実行
RUN pnpm build

# Production stage
FROM nginx:alpine AS production

# セキュリティ強化: 不要なパッケージを削除
RUN apk del --no-cache apk-tools

# nginxユーザーで実行
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx-app -g nginx-app nginx-app

# ビルド成果物をコピー
COPY --from=builder /app/dist /usr/share/nginx/html

# nginx設定ファイルをコピー
COPY docker/nginx/nginx.prod.conf /etc/nginx/nginx.conf
COPY docker/nginx/security-headers.conf /etc/nginx/security-headers.conf

# ポートを非特権ポートに変更
EXPOSE 8080

# ヘルスチェックスクリプトを追加
COPY docker/scripts/healthcheck.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/healthcheck.sh

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD /usr/local/bin/healthcheck.sh

# 非ルートユーザーで実行
USER nginx-app

CMD ["nginx", "-g", "daemon off;"]